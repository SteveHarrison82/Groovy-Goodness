tag:blogger.com,1999:blog-6671019398434141469.post-84102245332327078822009-12-17T07:40:00.001+01:002010-11-26T11:15:12.956+01:00Groovy Goodness: Splitting with Closures<p>Groovy adds a <code>split()</code> method to objects with a closure parameter. In the closure we must define a condition to split up the items in two lists. One list contains all the items that apply to the closure condition, the other list contains the rest of the items that don't apply to the closure condition.</p>
<pre class="brush:groovy">
def range = 1..10
def (even, odd) = range.split { it % 2 == 0 }
assert [2,4,6,8,10] == even
assert [1,3,5,7,9] == odd

def map = [language: 'Groovy', username: 'mrhaki', age: 36]
def (strings, others) = map.split { it.value instanceof String } 
assert 2 == strings.size()
assert 1 == others.size()
assert 'language' == strings[0].key &amp;&amp; 'Groovy' == strings[0].value 
assert 'username' == strings[1].key &amp;&amp; 'mrhaki' == strings[1].value 
assert 'age' == others[0].key &amp;&amp; 36 == others[0].value
</pre>Hubert Klein Ikkinkhttps://plus.google.com/116304108087638220732noreply@blogger.com0