tag:blogger.com,1999:blog-6671019398434141469.post-13012256308307373482015-09-11T15:45:00.001+02:002015-09-11T15:45:31.506+02:00Groovy Goodness: Inspect Method Returns Nicely Formatted Object Values<p>Groovy adds the <code>inspect</code> method to the <code>Object</code>. This means it is available on all objects in our application. It is like the <code>toString</code> method, but adds some extra formatting. The most notable is the addition of single quotes to String values.</p><p>In the following example we see the output of the <code>inspect</code> method on different objects:</p><pre class="brush:groovy">def username = "mrhaki"
// String value is enclosed in 
// single quotes.
assert username.inspect() == "'mrhaki'"


def user = "${username}" 
// user is GStringImpl not a String object,
// so no single quotes are added by
// inspect() to show value is a String object.
assert user.inspect() == "mrhaki"


def multiline = '''Hello mrhaki,
how you're doing?'''
// Special characters like tab,
// line feed and single quotes
// are escaped.
assert multiline.inspect() == /'Hello mrhaki,\nhow you\'re doing?'/


def list = [42, '1', ['Groovy rocks!']]
// String values in the list are
// enclosed in single quotes.
assert list.inspect() == "[42, '1', ['Groovy rocks!']]"


def range = 21..<24
// Ranges are shown 
// with .. or ..<.
assert range.inspect() == '21..<24'


def m = [a: 1, b: '1']
// Map keys and values are shown
// as their base type. Mostly
// keys are String values, so with
// inspect() they are enclosed in quotes.
assert m.inspect() == "['a':1, 'b':'1']"


import org.w3c.dom.Document
import org.w3c.dom.Element
import groovy.xml.DOMBuilder

def xmlString = '<sample><username>mrhaki</username></sample>'
Document doc = DOMBuilder.newInstance().parseText(xmlString)
Element root = doc.documentElement.firstChild
// XML Element objects are shown as 
// textual XML.
assert root.inspect().trim() == '<?xml version="1.0" encoding="UTF-8"?><username>mrhaki</username>'
</pre><p>Written with Groovy 2.4.4.</p>Hubert Klein Ikkinkhttps://plus.google.com/116304108087638220732noreply@blogger.com0