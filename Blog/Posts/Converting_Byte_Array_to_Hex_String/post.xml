tag:blogger.com,1999:blog-6671019398434141469.post-4648251472439093422014-04-03T09:23:00.000+02:002014-04-03T09:23:29.346+02:00Groovy Goodness: Converting Byte Array to Hex String<p>To convert a <code>byte[]</code> array to a <code>String</code> we can simply use the <code>new String(byte[])</code> constructor. But if the array contains non-printable bytes we don't get a good representation. In Groovy we can use the method <code>encodeHex()</code> to transform a <code>byte[]</code> array to a hex <code>String</code> value. The <code>byte</code> elements are converted to their hexadecimal equivalents. </p><pre class="brush:groovy">final byte[] printable = [109, 114, 104, 97, 107, 105]

// array with non-printable bytes 6, 27 (ACK, ESC)
final byte[] nonprintable = [109, 114, 6, 27, 104, 97, 107, 105]


assert new String(printable) == 'mrhaki'
assert new String(nonprintable) != 'mr  haki'


// encodeHex() returns a Writable
final Writable printableHex = printable.encodeHex()
assert printableHex.toString() == '6d7268616b69'
final nonprintableHex = nonprintable.encodeHex().toString()
assert nonprintableHex == '6d72061b68616b69'


// Convert back
assert nonprintableHex.decodeHex() == nonprintable
</pre><p>Code written with Groovy 2.2.1</p>Hubert Klein Ikkinkhttps://plus.google.com/116304108087638220732noreply@blogger.com0