tag:blogger.com,1999:blog-6671019398434141469.post-79503080743229034002011-06-03T08:05:00.001+02:002011-06-03T08:05:24.715+02:00Groovy Goodness: Add AST Transformations Transparently to Scripts<p>With Groovy 1.8 we can add compilation customizers when for example we want to run a Groovy script from our application code. Cedric Champeau has a nice <a href="http://www.jroller.com/melix/entry/customizing_groovy_compilation_process">blog post</a> about this feature. And we already learned about the <a href="http://mrhaki.blogspot.com/2011/06/groovy-goodness-add-imports.html">import customizer</a> in a previous Groovy Goodness blog post.
</p>
<p>Another customizer is the <code>ASTTransformationCustomizer</code>. We can use this customizer to add an AST transformation to a script. The AST transformation is then applied to all classes in the script. This means we can only apply transformations that can be used at class level. Another thing we need to notice is that we cannot set parameters for the AST transformation, so only the defaults for the parameters are used.
</p>
<p>We can use both local and global AST transformations with the <code>ASTTransformationCustomizer</code>. For a local transformation we use the annotation class, for a global transformation we pass the AST transformation class to the constructor.
</p>
<pre class="brush:groovy">
package com.mrhaki.blog

import org.codehaus.groovy.control.customizers.ASTTransformationCustomizer
import org.codehaus.groovy.control.CompilerConfiguration
import groovy.transform.Canonical

def conf = new CompilerConfiguration()
conf.addCompilationCustomizers(new ASTTransformationCustomizer(Canonical))

def shell = new GroovyShell(conf)
shell.evaluate '''
package com.mrhaki.blog

class User {
    String username, fullname
}

// TupleConstructor is added by Canonical transformation.
def user = new User('mrhaki', 'Hubert A. Klein Ikkink')
// ToString is added by Canonical transformation.
assert user.toString() == 'com.mrhaki.blog.User(mrhaki, Hubert A. Klein Ikkink)'

// AST transformation is also applied to the Script class.
assert this.toString() == 'com.mrhaki.blog.Script1()'
'''
</pre>Hubert Klein Ikkinkhttps://plus.google.com/116304108087638220732noreply@blogger.com0